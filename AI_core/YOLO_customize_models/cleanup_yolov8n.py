#!/usr/bin/env python3
"""
Script ƒë·ªÉ d·ªçn d·∫πp Ultralytics repo ch·ªâ gi·ªØ l·∫°i YOLOv8n detection model
Ch·∫°y script n√†y ƒë·ªÉ x√≥a c√°c file kh√¥ng c·∫ßn thi·∫øt cho YOLOv8n
"""

import os
import shutil
from pathlib import Path

def remove_directory(path):
    """X√≥a th∆∞ m·ª•c v√† t·∫•t c·∫£ n·ªôi dung b√™n trong"""
    if os.path.exists(path):
        print(f"üóëÔ∏è  X√≥a th∆∞ m·ª•c: {path}")
        shutil.rmtree(path)
    else:
        print(f"‚ö†Ô∏è  Th∆∞ m·ª•c kh√¥ng t·ªìn t·∫°i: {path}")

def remove_file(path):
    """X√≥a file"""
    if os.path.exists(path):
        print(f"üóëÔ∏è  X√≥a file: {path}")
        os.remove(path)
    else:
        print(f"‚ö†Ô∏è  File kh√¥ng t·ªìn t·∫°i: {path}")

def cleanup_ultralytics_repo():
    """D·ªçn d·∫πp repo Ultralytics ch·ªâ gi·ªØ YOLOv8n detection"""
    
    print("üöÄ B·∫Øt ƒë·∫ßu d·ªçn d·∫πp Ultralytics repo cho YOLOv8n...")
    
    # 1. X√≥a c√°c model configs kh√¥ng c·∫ßn thi·∫øt
    print("\nüìÅ X√≥a model configs kh√¥ng c·∫ßn thi·∫øt...")
    model_configs_to_remove = [
        "ultralytics/cfg/models/v3",
        "ultralytics/cfg/models/v5", 
        "ultralytics/cfg/models/v6",
        "ultralytics/cfg/models/v9",
        "ultralytics/cfg/models/v10",
        "ultralytics/cfg/models/11",
        "ultralytics/cfg/models/12",
        "ultralytics/cfg/models/rt-detr"
    ]
    
    for config_dir in model_configs_to_remove:
        remove_directory(config_dir)
    
    # X√≥a c√°c file YOLOv8 kh√¥ng c·∫ßn thi·∫øt (gi·ªØ l·∫°i yolov8.yaml)
    v8_files_to_remove = [
        "ultralytics/cfg/models/v8/yolov8-seg.yaml",
        "ultralytics/cfg/models/v8/yolov8-pose.yaml", 
        "ultralytics/cfg/models/v8/yolov8-cls.yaml",
        "ultralytics/cfg/models/v8/yolov8-obb.yaml",
        "ultralytics/cfg/models/v8/yolov8-world.yaml",
        "ultralytics/cfg/models/v8/yolov8-worldv2.yaml",
        "ultralytics/cfg/models/v8/yolov8-ghost.yaml",
        "ultralytics/cfg/models/v8/yolov8-ghost-p2.yaml",
        "ultralytics/cfg/models/v8/yolov8-ghost-p6.yaml",
        "ultralytics/cfg/models/v8/yolov8-p2.yaml",
        "ultralytics/cfg/models/v8/yolov8-p6.yaml",
        "ultralytics/cfg/models/v8/yolov8-pose-p6.yaml",
        "ultralytics/cfg/models/v8/yolov8-seg-p6.yaml",
        "ultralytics/cfg/models/v8/yolov8-rtdetr.yaml",
        "ultralytics/cfg/models/v8/yolov8-cls-resnet50.yaml",
        "ultralytics/cfg/models/v8/yolov8-cls-resnet101.yaml",
        "ultralytics/cfg/models/v8/yoloe-v8.yaml",
        "ultralytics/cfg/models/v8/yoloe-v8-seg.yaml"
    ]
    
    for file_path in v8_files_to_remove:
        remove_file(file_path)
    
    # 2. X√≥a solutions ho√†n to√†n
    print("\nüìÅ X√≥a solutions...")
    remove_directory("ultralytics/solutions")
    
    # 3. X√≥a trackers ho√†n to√†n
    print("\nüìÅ X√≥a trackers...")
    remove_directory("ultralytics/trackers")
    
    # 4. X√≥a to√†n b·ªô examples
    print("\nüìÅ X√≥a examples...")
    remove_directory("examples")
    
    # 5. X√≥a assets (ch·ªâ gi·ªØ core code)
    print("\nüìÅ X√≥a assets...")
    remove_directory("ultralytics/assets")
    
    # 6. X√≥a docs
    print("\nüìÅ X√≥a docs...")
    remove_directory("docs")
    
    # 7. X√≥a tests
    print("\nüìÅ X√≥a tests...")
    remove_directory("tests")
    
    # 8. X√≥a docker
    print("\nüìÅ X√≥a docker...")
    remove_directory("docker")
    
    # 9. X√≥a c√°c file kh√¥ng c·∫ßn thi·∫øt kh√°c
    print("\nüìÅ X√≥a c√°c file kh√¥ng c·∫ßn thi·∫øt kh√°c...")
    other_files_to_remove = [
        "CITATION.cff",
        "CONTRIBUTING.md", 
        "README.zh-CN.md",
        "mkdocs.yml"
    ]
    
    for file_path in other_files_to_remove:
        remove_file(file_path)
    
    print("\n‚úÖ Ho√†n th√†nh d·ªçn d·∫πp!")
    print("\nüìã C√°c file/th∆∞ m·ª•c ƒë√£ ƒë∆∞·ª£c gi·ªØ l·∫°i (core YOLOv8n):")
    print("   - ultralytics/cfg/models/v8/yolov8.yaml")
    print("   - ultralytics/nn/")
    print("   - ultralytics/engine/")
    print("   - ultralytics/data/")
    print("   - ultralytics/utils/")
    print("   - ultralytics/hub/")
    print("   - ultralytics/models/")
    print("   - README.md")
    print("   - LICENSE")
    print("   - pyproject.toml")
    
    print("\n‚ö†Ô∏è  L∆∞u √Ω: B·∫°n c·∫ßn ki·ªÉm tra v√† c·∫≠p nh·∫≠t c√°c import trong code")
    print("   ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng c√≥ l·ªói sau khi d·ªçn d·∫πp.")

if __name__ == "__main__":
    # X√°c nh·∫≠n tr∆∞·ªõc khi th·ª±c hi·ªán
    print("‚ö†Ô∏è  C·∫¢NH B√ÅO: Script n√†y s·∫Ω x√≥a vƒ©nh vi·ªÖn c√°c file/th∆∞ m·ª•c kh√¥ng c·∫ßn thi·∫øt!")
    print("üìÅ Th∆∞ m·ª•c hi·ªán t·∫°i:", os.getcwd())
    
    confirm = input("\n‚ùì B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c? (yes/no): ")
    
    if confirm.lower() in ['yes', 'y', 'c√≥']:
        cleanup_ultralytics_repo()
    else:
        print("‚ùå H·ªßy b·ªè d·ªçn d·∫πp.")
